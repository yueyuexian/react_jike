{"version":3,"file":"static/js/888.03a185ec.chunk.js","mappings":"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","sources":["hooks/useChannel.js","apis/article.js","pages/Article/index.js"],"sourcesContent":["// 封装获取频道列表的函数\r\nimport { getChannelsService } from '@/apis/article.js'\r\nimport { useEffect, useState } from 'react'\r\nconst useChannel = () => {\r\n  const [channels, setChannels] = useState([])\r\n  const getChannels = async () => {\r\n    const res = await getChannelsService()\r\n    setChannels(res.data.channels)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getChannels()\r\n  }, [])\r\n  // return要用到的状态数据\r\n  return {\r\n    channels\r\n  }\r\n}\r\n\r\nexport default useChannel\r\n","// 封装和文章相关的接口\r\nimport request from '@/utils/request.js'\r\n// 获取所有频道数据\r\nexport function getChannelsService() {\r\n  return request.get('/channels')\r\n}\r\n\r\n// 新增文章\r\nexport function addArticleService(data) {\r\n  return request.post('/mp/articles?draft=false', data)\r\n}\r\n\r\n// 获取文章列表\r\nexport function getArticleListService(params) {\r\n  return request.get('/mp/articles', {\r\n    params\r\n  })\r\n}\r\n// 删除文章\r\nexport function deleteArticleService(id) {\r\n  return request.delete(`mp/articles/${id}`)\r\n}\r\n\r\n// 获取文章详情\r\nexport function getArticleDetailService(id) {\r\n  return request.get(`/mp/articles/${id}`)\r\n}\r\n\r\n// 更新文章\r\nexport function updateArticleService(data) {\r\n  return request.put(`/mp/articles/${data.id}?draft=false`, data)\r\n}\r\n","import { Link } from 'react-router-dom'\r\nimport {\r\n  Card,\r\n  Breadcrumb,\r\n  Form,\r\n  Button,\r\n  Radio,\r\n  DatePicker,\r\n  Select,\r\n  Popconfirm,\r\n  message\r\n} from 'antd'\r\nimport locale from 'antd/es/date-picker/locale/zh_CN'\r\nimport useChannel from '@/hooks/useChannel.js'\r\nimport { getArticleListService } from '@/apis/article'\r\nimport { useEffect, useState } from 'react'\r\n// 导入资源\r\nimport { Table, Tag, Space } from 'antd'\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons'\r\nimport img404 from '@/assets/error.png'\r\nimport dayjs from 'dayjs'\r\nimport { deleteArticleService } from '../../apis/article'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst { Option } = Select\r\nconst { RangePicker } = DatePicker\r\n\r\nconst Article = () => {\r\n  const navigate = useNavigate()\r\n\r\n  // 调用自定义hooks获取频道列表数据\r\n  const { channels } = useChannel()\r\n\r\n  // 文章列表\r\n  const [articleList, setArticleList] = useState([])\r\n  const [total, setTotal] = useState(0)\r\n\r\n  const getArticleList = async (params = {}) => {\r\n    const res = await getArticleListService(params)\r\n    setArticleList(res.data.results)\r\n    setTotal(res.data.total_count)\r\n  }\r\n  // 准备参数\r\n  const [reqData, setReqData] = useState({\r\n    status: '',\r\n    channel_id: '',\r\n    begin_pubdate: '',\r\n    end_pubdate: '',\r\n    page: 1,\r\n    per_page: 4\r\n  })\r\n  // 文章列表获取\r\n  useEffect(() => {\r\n    try {\r\n      getArticleList(reqData)\r\n    } catch (error) {\r\n      // 提示用户\r\n      message.error(error.message || '获取文章列表失败')\r\n    }\r\n  }, [reqData])\r\n\r\n  // 状态枚举对象\r\n  const status = {\r\n    1: <Tag color=\"yellow\">待审核</Tag>,\r\n    2: <Tag color=\"green\">审核通过</Tag>\r\n  }\r\n\r\n  // 准备列数据\r\n  const columns = [\r\n    {\r\n      title: '封面',\r\n      dataIndex: 'cover',\r\n      width: 120,\r\n      render: (cover) => {\r\n        return <img src={cover.images[0] || img404} width={80} height={60} alt=\"\" />\r\n      }\r\n    },\r\n    {\r\n      title: '标题',\r\n      dataIndex: 'title',\r\n      width: 220\r\n    },\r\n    {\r\n      title: '状态',\r\n      dataIndex: 'status',\r\n      // render: (data) =>\r\n      //   data === 1 ? <Tag color=\"yellow\">待审核</Tag> : <Tag color=\"green\">审核通过</Tag>\r\n      render: (data) => status[data]\r\n    },\r\n    {\r\n      title: '发布时间',\r\n      dataIndex: 'pubdate'\r\n    },\r\n    {\r\n      title: '阅读数',\r\n      dataIndex: 'read_count'\r\n    },\r\n    {\r\n      title: '评论数',\r\n      dataIndex: 'comment_count'\r\n    },\r\n    {\r\n      title: '点赞数',\r\n      dataIndex: 'like_count'\r\n    },\r\n    {\r\n      title: '操作',\r\n      render: (data) => {\r\n        return (\r\n          <Space size=\"middle\">\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"circle\"\r\n              icon={<EditOutlined />}\r\n              onClick={() => navigate(`/publish?id=${data.id}`)}\r\n            />\r\n\r\n            <Popconfirm\r\n              title=\"删除文章\"\r\n              description=\"确认删除该文章吗？\"\r\n              onConfirm={() => deleteArticle(data.id)}\r\n              okText=\"确认\"\r\n              cancelText=\"取消\"\r\n            >\r\n              <Button type=\"primary\" danger shape=\"circle\" icon={<DeleteOutlined />} />\r\n            </Popconfirm>\r\n          </Space>\r\n        )\r\n      }\r\n    }\r\n  ]\r\n\r\n  // 筛选\r\n  const onFinish = (value) => {\r\n    console.log(value)\r\n    const newReqData = {\r\n      ...reqData,\r\n      status: value.status,\r\n      channel_id: value.channel_id,\r\n      // 注意dayjs()如果不传或者传的是undefined参数会返回当前时间的dayjs对象\r\n      begin_pubdate: dayjs(value.date?.[0]).format('YYYY-MM-DD'),\r\n      end_pubdate: dayjs(value.date?.[1]).format('YYYY-MM-DD')\r\n    }\r\n    // 根据接口数据格式要求，为空串或undefined都不行，必须不携带这个参数才行\r\n    if (value.status === '') {\r\n      delete newReqData.status\r\n    }\r\n    if (!value.channel_id) {\r\n      delete newReqData.channel_id\r\n    }\r\n    if (!value.date) {\r\n      delete newReqData.begin_pubdate\r\n      delete newReqData.end_pubdate\r\n    }\r\n    setReqData(newReqData)\r\n\r\n    /**\r\n     * 在React中，setReqData这样的状态更新函数是异步的，这意味着：\r\n        1.不会立即执行更新，React会批量处理状态更新以提高性能\r\n        2.更新后的新状态值在下一次渲染时才会生效\r\n        3.如果需要在更新后立即获取最新状态，可以使用useEffect钩子：\r\n     */\r\n    // 重新获取列表数据，使用useEffect依赖项发生变化重新获取列表数据\r\n  }\r\n  // 分页\r\n  const onPageChange = (page) => {\r\n    // 利用reqData依赖项变化，重复执行副作用函数useEffect重新获取列表数据\r\n    setReqData({\r\n      ...reqData,\r\n      page\r\n    })\r\n  }\r\n\r\n  // 删除文章\r\n  const deleteArticle = async (id) => {\r\n    try {\r\n      await deleteArticleService(id)\r\n      // 删除成功后，重新获取列表数据\r\n      if (articleList.length === 1 && reqData.page > 1) {\r\n        // 如果删除的是最后一页的最后一条数据，且不是第一页,页数 - 1\r\n        setReqData({\r\n          ...reqData,\r\n          page: reqData.page - 1\r\n        })\r\n      } else {\r\n        // 如果已经是第一页\r\n        getArticleList(reqData)\r\n      }\r\n      // 提示用户\r\n      message.success('删除成功')\r\n    } catch (error) {\r\n      // 提示用户,注意如果在响应拦截器里已经对错误进行了提示则这里再提示就会出现两次提示\r\n      message.error('删除文章失败')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card\r\n        title={\r\n          <Breadcrumb items={[{ title: <Link to={'/'}>首页</Link> }, { title: '文章列表' }]} />\r\n        }\r\n        style={{ marginBottom: 20 }}\r\n      >\r\n        <Form initialValues={{ status: '' }} onFinish={onFinish}>\r\n          <Form.Item label=\"状态\" name=\"status\">\r\n            <Radio.Group>\r\n              <Radio value={''}>全部</Radio>\r\n              <Radio value={0}>草稿</Radio>\r\n              <Radio value={2}>审核通过</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"频道\" name=\"channel_id\">\r\n            <Select placeholder=\"请选择文章频道\" style={{ width: 120 }}>\r\n              {channels.map((item) => (\r\n                <Option value={item.id} key={item.id}>\r\n                  {item.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"日期\" name=\"date\">\r\n            {/* 传入locale属性 控制中文显示*/}\r\n            <RangePicker locale={locale}></RangePicker>\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" style={{ marginLeft: 40 }}>\r\n              筛选\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        <Card title={`根据筛选条件共查询到 ${total} 条结果：`}>\r\n          <Table\r\n            rowKey=\"id\"\r\n            columns={columns}\r\n            dataSource={articleList}\r\n            pagination={{\r\n              pageSize: reqData.per_page,\r\n              total,\r\n              onChange: onPageChange\r\n            }}\r\n          />\r\n        </Card>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Article\r\n"],"names":["useChannel","channels","setChannels","useState","useEffect","async","res","getChannelsService","data","getChannels","request","get","addArticleService","post","getArticleListService","params","deleteArticleService","id","delete","concat","getArticleDetailService","updateArticleService","put","Option","Select","RangePicker","DatePicker","Article","navigate","useNavigate","articleList","setArticleList","total","setTotal","getArticleList","arguments","length","undefined","results","total_count","reqData","setReqData","status","channel_id","begin_pubdate","end_pubdate","page","per_page","error","message","_jsx","Tag","color","children","columns","title","dataIndex","width","render","cover","src","images","height","alt","_jsxs","Space","size","Button","type","shape","icon","EditOutlined","onClick","Popconfirm","description","onConfirm","deleteArticle","okText","cancelText","danger","DeleteOutlined","_objectSpread","success","Card","Breadcrumb","items","Link","to","style","marginBottom","Form","initialValues","onFinish","value","_value$date","_value$date2","console","log","newReqData","dayjs","date","format","Item","label","name","Radio","placeholder","map","item","locale","htmlType","marginLeft","Table","rowKey","dataSource","pagination","pageSize","onChange"],"sourceRoot":""}